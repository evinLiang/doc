(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{145:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[a._v("#")]),a._v(" GIT")]),a._v(" "),s("h2",{attrs:{id:"git如何将本地文件关联到远程服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git如何将本地文件关联到远程服务器"}},[a._v("#")]),a._v(" git如何将本地文件关联到远程服务器")]),a._v(" "),s("h4",{attrs:{id:"第一步：选择目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一步：选择目录"}},[a._v("#")]),a._v(" 第一步：选择目录")]),a._v(" "),s("p",[a._v("进入本地需要关联的目录（比如demo目录），然后")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" init\n")])])]),s("p",[a._v("第二步：关联,origin后面的git地址从git远程复制")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin https://github.com/xxxx/xxx.git\n")])])]),s("p",[a._v("或者")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin git@git.oschina.net:yourname/demo.git\n")])])]),s("p",[a._v("第三步：查看")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch  -vv\n")])])]),s("p",[a._v("可以看出有多少分支")]),a._v(" "),s("p",[a._v("第四步：更新")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull\n")])])]),s("h4",{attrs:{id:"可能会出现的问题："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可能会出现的问题："}},[a._v("#")]),a._v(" 可能会出现的问题：")]),a._v(" "),s("p",[a._v("如果第二步写错了：则")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" origin   //删除origin\n")])])]),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin git@git.oschina.net:yourname/demo.git   //重新添加origin\n")])])]),s("p",[a._v("如果报错："),s("code",[a._v("-refusing to merge unrelated histories")]),a._v(",出现这个问题的最主要原因还是在于本地仓库和远程仓库实际上是独立的两个仓库。假如我之前是直接clone的方式在本地建立起远程github仓库的克隆本地仓库就不会有这问题了。")]),a._v(" "),s("p",[a._v("查阅了一下资料，发现可以在pull命令后紧接着使用--allow-unrelated-history选项来解决问题（该选项可以合并两个独立启动仓库的历史）。")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull origin master –allow-unrelated-histories\n")])])]),s("p",[a._v("接着")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin master:master\n")])])]),s("h2",{attrs:{id:"git版本管理规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git版本管理规范"}},[a._v("#")]),a._v(" git版本管理规范")]),a._v(" "),s("h4",{attrs:{id:"主分支master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主分支master"}},[a._v("#")]),a._v(" 主分支master")]),a._v(" "),s("blockquote",[s("p",[a._v("首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。\ngit主分支的名字，默认叫做master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。\n每发布一个正式版本，在master上建一个tag标记。\nmaster分支是长期存在。")])]),a._v(" "),s("h4",{attrs:{id:"开发分支develop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发分支develop"}},[a._v("#")]),a._v(" 开发分支develop")]),a._v(" "),s("p",[a._v("主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做develop。\ndevelop分支是长期存在。")]),a._v(" "),s("h4",{attrs:{id:"功能分支feature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#功能分支feature"}},[a._v("#")]),a._v(" 功能分支feature")]),a._v(" "),s("p",[a._v("功能分支是为了开发某种特定功能，从develop分支上面分出来的。开发完成后，要再并入develop。\n功能分支的名字，可以采用feature/*的形式命名。\n例如我需要开发一个登录功能：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b feature/login develop\n")])])]),s("p",[a._v("开发完成后，合并到develop分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换到develop分支")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout develop\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 分支合并")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff feature/login\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除功能分支")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d feature/login\n")])])]),s("h4",{attrs:{id:"预发布分支release"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预发布分支release"}},[a._v("#")]),a._v(" 预发布分支release")]),a._v(" "),s("p",[a._v("预发布分支是指发布正式版本之前（即合并到master分支之前），我们可能需要有一个预发布的版本进行测试。\n预发布分支是从develop分支上面分出来的，预发布结束以后，必须合并进develop和master分支。\n它的命名，可以采用release/*的形式。\n创建一个预发布分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b release/v1.0.0 develop\n")])])]),s("p",[a._v("确认没有问题后，合并到master分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff release/v1.0.0\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 对合并生成的新节点，做一个标签")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -a v1.0.0\n")])])]),s("p",[a._v("再合并到develop分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout develop\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff release/v1.0.0\n")])])]),s("p",[a._v("最后，删除预发布分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d release/v1.0.0\n")])])]),s("h4",{attrs:{id:"修补bug分支hotfix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修补bug分支hotfix"}},[a._v("#")]),a._v(" 修补bug分支hotfix")]),a._v(" "),s("p",[a._v("软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。\n修补bug分支是从master分支上面分出来的。修补结束以后，再合并进master和develop分支。\n它的命名，可以采用hotfix/*的形式。\n创建一个修补bug分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b fixbug/v1.0.0 master\n")])])]),s("p",[a._v("修补结束后，合并到master分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff fixbug/v1.0.0\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -a v1.0.1\n")])])]),s("p",[a._v("再合并到develop分支：")]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout develop\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff fixbug/v1.0.0\n")])])]),s("p",[a._v('最后，删除"修补bug分支"：')]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d fixbug/v1.0.0\n")])])]),s("h4",{attrs:{id:"注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[a._v("#")]),a._v(" 注意")]),a._v(" "),s("ol",[s("li",[a._v("分支合并必须使用--no-ff参数")])]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 对Develop分支进行合并")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff develop\n")])])]),s("h4",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),s("p",[a._v("Git分支管理策略 "),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2012/07/git.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://www.ruanyifeng.com/blog/2012/07/git.html"),s("OutboundLink")],1),a._v(" "),s("br"),a._v("\ngit-flow图解 "),s("a",{attrs:{href:"http://blog.csdn.net/liubo2012/article/details/8515065",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://blog.csdn.net/liubo2012/article/details/8515065"),s("OutboundLink")],1),a._v(" "),s("br"),a._v("\nGit 版本管理工具 "),s("a",{attrs:{href:"http://blog.csdn.net/ithomer/article/details/7527877",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://blog.csdn.net/ithomer/article/details/7527877"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"git其他基本操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git其他基本操作"}},[a._v("#")]),a._v(" git其他基本操作")]),a._v(" "),s("ol",[s("li",[a._v("更新git remote 中所有的远程")])]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("查看git所有远程远程")])]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -a\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("删除远程分支")])]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --delete origin/dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("远程分支名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("删除本地分支")])]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 需要切换到其他分支")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -D dev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("本地分支名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("暂存分支，拉取代码")])]),a._v(" "),s("div",{staticClass:"language-Bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash \n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull origin master \n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);